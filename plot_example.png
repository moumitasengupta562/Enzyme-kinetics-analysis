# enzyme_kinetics.py
import numpy as np
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit

# Michaelis-Menten equation
def michaelis_menten(S, Vmax, Km):
    return (Vmax * S) / (Km + S)

# Example substrate concentrations (mM)
S = np.array([0.1, 0.5, 1, 2, 5, 10])
# Corresponding reaction rates (uM/min)
v = np.array([0.08, 0.36, 0.6, 0.85, 1.1, 1.2])

# Fit data to Michaelis-Menten equation
params, _ = curve_fit(michaelis_menten, S, v)
Vmax, Km = params

# Generate smooth curve for plotting
S_fit = np.linspace(0, 12, 100)
v_fit = michaelis_menten(S_fit, Vmax, Km)

# Plot
plt.scatter(S, v, color='blue', label='Experimental data')
plt.plot(S_fit, v_fit, color='red', label=f'Fit: Vmax={Vmax:.2f}, Km={Km:.2f}')
plt.title('Enzyme Kinetics (Michaelis-Menten)')
plt.xlabel('Substrate Concentration [S] (mM)')
plt.ylabel('Reaction Rate v (uM/min)')
plt.legend()
plt.grid(True)
plt.show()

